@model TripItineraryViewModel

<h3>Confirm Your Itinerary</h3>

<form id="itineraryForm" asp-action="ConfirmFinalBooking" method="post">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Select</th>
                <th>Flight Number</th>
                <th>From</th>
                <th>To</th>
                <th>Departure</th>
                <th>Arrival</th>
                <th>Duration</th>
                <th>Miles</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Flights.Count; i++)
            {
                var flight = Model.Flights[i];
                <tr>
                    <td>
                        <input type="radio" name="SelectedRouteId" value="@flight.Id" class="flight-radio" />
                    </td>
                    <td>@flight.FlightNumber</td>
                    <td>@flight.OriginCityNavigation.Namee</td>
                    <td>@flight.DestinationCityNavigation.Namee</td>
                    <td>@flight.DepartureTime?.ToString("dd MMM yyyy hh:mm tt")</td>
                    <td>@flight.ArrivalTime?.ToString("dd MMM yyyy hh:mm tt")</td>
                    <td>@flight.Duration mins</td>
                    <td></td>
                    <td class="base-price" data-price="@flight.BasePrice">Rs. @flight.BasePrice</td>
                </tr>
            }
        </tbody>
    </table>

    <p><strong>Total Price:</strong> <span id="finalPrice">Rs. 0</span></p>

    <div class="form-group">
        <label>Passenger Class</label>
        <select class="form-control" name="PassengerClass" asp-items="ViewBag.Class" required>
            <option value="">-- Select Class --</option>
        </select>
    </div>

    <div class="form-group">
        <label>Trip Type</label>
        <select id="TripType" name="TripType" class="form-control" required>
            <option value="OneWay">One-Way</option>
            <option value="RoundTrip">Round Trip</option>
        </select>
    </div>

    <div class="form-group">
        <label>Departure Date</label>
        <input type="date" name="DepartureDate" class="form-control" min="@DateTime.Today.ToString("yyyy-MM-dd")" required />
    </div>

    <div class="form-group" id="ReturnDateGroup" style="display: none;">
        <label>Return Date</label>
        <input type="date" name="ReturnDate" class="form-control" min="@DateTime.Today.ToString("yyyy-MM-dd")" />
    </div>

    <div class="form-row">
        <div class="col">
            <label>Adults</label>
            <input type="number" name="Adults" class="form-control" min="0" value="1" required />
        </div>
        <div class="col">
            <label>Children</label>
            <input type="number" name="Children" class="form-control" min="0" value="0" />
        </div>
        <div class="col">
            <label>Seniors</label>
            <input type="number" name="Seniors" class="form-control" min="0" value="0" />
        </div>
    </div>
     @if (User.Identity.Name != null)
    {
        <hr />
        <button type="button" id="blockSelectedFlight" class="btn btn-success">Block</button>
        <hr />

        <h5>Payment Information</h5>
        <div class="form-group">
            <label>Credit Card Number</label>
            <input type="text" id="creditCard" class="form-control" maxlength="16" placeholder="Enter 16-digit card number" required />
        </div>

        <div class="form-group">
            <label>Expiry Date</label>
            <input type="month" id="expiryDate" class="form-control" required />
        </div>

        <div class="form-group">
            <label>CVV</label>
            <input type="text" id="cvv" class="form-control" maxlength="4" placeholder="3 or 4 digit CVV" required />
        </div>

        <br />
        <button type="button" id="bookSelectedFlight" class="btn btn-success">Confirm & Book</button>

    }
        </form>
    
    @section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#TripType').on('change', function () {
                $('#ReturnDateGroup').toggle($(this).val() === 'RoundTrip');
            });

            function calculatePrice() {
                const selected = $('input[name="SelectedRouteId"]:checked');
                if (!selected.length) return;

                const price = parseFloat(selected.closest('tr').find('.base-price').data('price')) || 0;
                const adults = parseInt($('input[name="Adults"]').val()) || 0;
                const children = parseInt($('input[name="Children"]').val()) || 0;
                const seniors = parseInt($('input[name="Seniors"]').val()) || 0;
                const cls = $('select[name="PassengerClass"] option:selected').text().toLowerCase();

                let multiplier = cls.includes("business") ? 1.2 : 1;
                let total = ((adults * price) + (children * price * 0.5) + (seniors * price * 0.7)) * multiplier;
                total = Math.round(total);

                $('#finalPrice').text("Rs. " + total);
                checkSeats(adults + children + seniors);
            }

            function checkSeats(totalSeats) {
                const selected = $('input[name="SelectedRouteId"]:checked');
                if (!selected.length) return;

                $.post('/Reservation/CheckSeatAvailability', {
                    totalSeatsRequested: totalSeats,
                    selectedRouteIds: selected.val()
                }, function (res) {
                    if (!res.success && res.insufficient) {
                        let msg = "⚠️ Not enough seats:\n\n";
                        res.insufficient.forEach(f => {
                            msg += `🔴 Flight ${f.FlightNumber} has only ${f.availableSeats} seat(s).\n`;
                        });
                        alert(msg);
                    }
                });
            }

            $(document).on('change input', 'input[name="Adults"], input[name="Children"], input[name="Seniors"], select[name="PassengerClass"], input[name="SelectedRouteId"]', function () {
                calculatePrice();
            });

            $('#bookSelectedFlight').on('click', function () {
                const selected = $('input[name="SelectedRouteId"]:checked');
                if (!selected.length) {
                    alert("Please select a flight to book.");
                    return;
                }

                const creditCard = $('#creditCard').val();
                const expiryDate = $('#expiryDate').val();
                const cvv = $('#cvv').val();

                if (!creditCard || creditCard.length !== 16 || !/^\d+$/.test(creditCard)) {
                    alert("⚠️ Please enter a valid 16-digit credit card number.");
                    return;
                }

                if (!expiryDate) {
                    alert("⚠️ Please select an expiry date.");
                    return;
                }

                if (!cvv || !/^\d{3,4}$/.test(cvv)) {
                    alert("⚠️ Please enter a valid 3 or 4 digit CVV.");
                    return;
                }

                const data = {
                    SelectedRouteId: selected.val(),
                    PassengerClass: $('select[name="PassengerClass"]').val(),
                    TripType: $('#TripType').val(),
                    DepartureDate: $('input[name="DepartureDate"]').val(),
                    ReturnDate: $('input[name="ReturnDate"]').val(),
                    Adults: $('input[name="Adults"]').val(),
                    Children: $('input[name="Children"]').val(),
                    Seniors: $('input[name="Seniors"]').val(),
                    CreditCardUsed: creditCard,
                    ExpiryDate: expiryDate,
                    CVV: cvv
                };

                $.ajax({
                    url: '/Reservation/ConfirmFinalBooking',
                    type: 'POST',
                    data: data,
                    success: function (response) {
                        alert("✅ Flight booked successfully!");
                        selected.closest('tr').remove();
                        $('input[name="SelectedRouteId"]').prop('checked', false);
                        $('#finalPrice').text("Rs. 0");
                    },
                    error: function () {
                        alert("❌ Booking failed. Please try again.");
                    }
                });
            });

            $('#blockSelectedFlight').on('click', function () {
                const selected = $('input[name="SelectedRouteId"]:checked');
                if (!selected.length) {
                    alert("Please select a flight to block.");
                    return;
                }

                const flightId = selected.val();
                const adults = parseInt($('input[name="Adults"]').val()) || 0;
                const children = parseInt($('input[name="Children"]').val()) || 0;
                const seniors = parseInt($('input[name="Seniors"]').val()) || 0;

                $.ajax({
                    url: '/Reservation/BlockFlightSeats',
                    type: 'POST',
                    data: {
                        SelectedRouteId: flightId,
                        SelectedRouteId: selected.val(),
                        PassengerClass: $('select[name="PassengerClass"]').val(),
                        TripType: $('#TripType').val(),
                        DepartureDate: $('input[name="DepartureDate"]').val(),
                        ReturnDate: $('input[name="ReturnDate"]').val(),
                        Adults: $('input[name="Adults"]').val(),
                        Children: $('input[name="Children"]').val(),
                        Seniors: $('input[name="Seniors"]').val(),
                    },
                    success: function (response) {
                        if (response.success) {
                            alert("✅ Seats blocked! Please confirm booking within 15 minutes.\nBlocking Number: " + response.blockingNumber);
                            
                        } else {
                            alert("❌ " + response.message);
                        }
                    },
                    error: function () {
                        alert("❌ Failed to block seats. Try again.");
                    }
                });
            });





        });
    </script>



    <style>
        /* Container for the form */
        #itineraryForm {
            background-color: #051e23;
            color: #eee;
            padding: 30px 35px;
            border-radius: 15px;
            max-width: 1000px;
            margin: 40px auto;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            box-shadow: 0 10px 50px rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease-in-out;
        }

            #itineraryForm:hover {
                box-shadow: 0 12px 60px rgba(0, 0, 0, 0.5);
                transform: translateY(-2px);
            }

            /* Heading styles */
            #itineraryForm h3 {
                color: #D72638;
                text-align: center;
                font-weight: 700;
                margin-bottom: 30px;
                letter-spacing: 1.5px;
                text-transform: uppercase;
                font-size: 1.7rem;
                text-shadow: 1px 1px 5px rgba(0,0,0,0.4);
            }

            /* Table styling */
            #itineraryForm table {
                width: 100%;
                border-collapse: collapse;
                margin-bottom: 30px;
                border-radius: 12px;
                overflow: hidden;
                box-shadow: 0 6px 30px rgba(0, 0, 0, 0.4);
            }

                #itineraryForm table thead {
                    background-color: #0b3a3f;
                    color: #fff;
                }

                #itineraryForm table th,
                #itineraryForm table td {
                    padding: 15px 20px;
                    text-align: center;
                    border: 1px solid rgba(255, 255, 255, 0.2);
                    vertical-align: middle;
                    font-size: 1rem;
                }

                /* Hover effect for table rows */
                #itineraryForm table tbody tr:hover {
                    background-color: rgba(215, 38, 56, 0.2);
                    cursor: pointer;
                }

            /* Flight radio button styling */
            #itineraryForm input[type="radio"].flight-radio {
                transform: scale(1.3);
                cursor: pointer;
                margin-left: 10px;
            }

            /* Price display styles */
            #itineraryForm p strong {
                color: #D72638;
                font-size: 1.3rem;
                font-weight: 600;
            }

        #finalPrice {
            font-size: 1.5rem;
            font-weight: 700;
            color: #fff;
            margin-left: 10px;
        }

        /* Form field styling */
        #itineraryForm .form-group {
            margin-bottom: 20px;
            position: relative;
        }

        /* Label styling */
        #itineraryForm label {
            display: block;
            margin-bottom: 6px;
            font-weight: 600;
            color: #ddd;
        }

        /* Select and input field styling */
        #itineraryForm select.form-control,
        #itineraryForm input.form-control {
            width: 100%;
            padding: 12px 15px;
            border-radius: 10px;
            border: 1px solid rgba(255,255,255,0.2);
            background-color: #051e23;
            color: #eee;
            font-size: 1rem;
            transition: border-color 0.3s ease, box-shadow 0.3s ease;
        }

            /* Focused input and select fields */
            #itineraryForm select.form-control:focus,
            #itineraryForm input.form-control:focus {
                border-color: #D72638;
                outline: none;
                box-shadow: 0 0 10px rgba(215, 38, 56, 0.7);
            }

        /* Flex layout for form row */
        #itineraryForm .form-row {
            display: flex;
            gap: 20px;
            margin-bottom: 30px;
        }

            #itineraryForm .form-row > div {
                flex: 1;
            }

        /* Button styling */
        #itineraryForm .btn {
            background-color: #D72638;
            border: none;
            padding: 14px 32px;
            border-radius: 12px;
            font-size: 1.2rem;
            font-weight: 700;
            color: white;
            cursor: pointer;
            transition: background-color 0.3s ease, box-shadow 0.3s ease;
            display: block;
            margin: 0 auto 25px auto;
            max-width: 300px;
            box-shadow: 0 6px 18px rgba(215, 38, 56, 0.5);
        }

            /* Hover effect for buttons */
            #itineraryForm .btn:hover {
                background-color: #b61f2d;
                box-shadow: 0 8px 25px rgba(215, 38, 56, 0.7);
                transform: translateY(-3px);
            }

        /* Horizontal line styling */
        #itineraryForm hr {
            border: 0;
            height: 1px;
            background: rgba(255, 255, 255, 0.2);
            margin: 30px 0;
        }

        /* For the "Block" button */
        #blockSelectedFlight {
            background-color: #ff5a5f;
            padding: 12px 30px;
            border-radius: 10px;
            font-size: 1.1rem;
            font-weight: 700;
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-bottom: 25px;
            width: 100%;
        }

            /* Hover effect for "Block" button */
            #blockSelectedFlight:hover {
                background-color: #ff3b3f;
                transform: translateY(-2px);
                box-shadow: 0 4px 16px rgba(255, 90, 95, 0.6);
            }

    </style>

}


             